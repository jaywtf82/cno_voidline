# C/No Voidline - Docker Compose for Production Deployment
# Supports GitHub Pages, Netlify, Vercel, Railway, Render deployment

version: '3.8'

services:
  # Main application service
  voidline-app:
    build:
      context: ..
      dockerfile: scripts/Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL:-postgresql://localhost:5432/voidline}
      - PGHOST=${PGHOST:-localhost}
      - PGPORT=${PGPORT:-5432}
      - PGDATABASE=${PGDATABASE:-voidline}
      - PGUSER=${PGUSER:-voidline}
      - PGPASSWORD=${PGPASSWORD:-voidline}
      - PORT=5000
    volumes:
      - ../public/models:/app/public/models:ro
      - app-data:/app/data
    depends_on:
      - postgres
    networks:
      - voidline-net
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.voidline.rule=Host(`voidline.local`)"
      - "traefik.http.services.voidline.loadbalancer.server.port=5000"

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=voidline
      - POSTGRES_USER=voidline  
      - POSTGRES_PASSWORD=voidline
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - voidline-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U voidline -d voidline"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx reverse proxy (optional, for local development)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - voidline-app
    networks:
      - voidline-net
    restart: unless-stopped
    profiles:
      - nginx

  # Redis for session storage (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - voidline-net
    restart: unless-stopped
    profiles:
      - redis
    command: redis-server --appendonly yes

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  app-data:
    driver: local

networks:
  voidline-net:
    driver: bridge